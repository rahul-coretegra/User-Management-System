// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using User_Management_System.DbModule;

#nullable disable

namespace User_Management_System.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240125094839_UpdateRoleAssignMentModel")]
    partial class UpdateRoleAssignMentModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("User_Management_System.Models.SupremeModels.RoleAndAccess", b =>
                {
                    b.Property<string>("roleAndAccessId")
                        .HasColumnType("text");

                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("isAccess")
                        .HasColumnType("integer");

                    b.Property<string>("roleUniqueCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("routeName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("routePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("roleAndAccessId");

                    b.HasIndex("roleUniqueCode");

                    b.ToTable("RoleAndAccess");
                });

            modelBuilder.Entity("User_Management_System.Models.SupremeModels.UserRole", b =>
                {
                    b.Property<string>("roleUniqueCode")
                        .HasColumnType("text");

                    b.Property<int>("roleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("roleId"));

                    b.Property<int>("roleLevel")
                        .HasColumnType("integer");

                    b.Property<string>("roleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("roleUniqueCode");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("User_Management_System.Models.SupremeModels.UserRoleAssignment", b =>
                {
                    b.Property<string>("userUniqueCode")
                        .HasColumnType("text");

                    b.Property<string>("roleUniqueCode")
                        .HasColumnType("text");

                    b.Property<int>("accessToRole")
                        .HasColumnType("integer");

                    b.Property<string>("assignmentUniqueId")
                        .HasColumnType("text");

                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.HasKey("userUniqueCode", "roleUniqueCode");

                    b.HasIndex("roleUniqueCode");

                    b.ToTable("UserRoleAssignments");
                });

            modelBuilder.Entity("User_Management_System.Models.UserModels.User", b =>
                {
                    b.Property<string>("userUniqueCode")
                        .HasColumnType("text");

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("isActiveUser")
                        .HasColumnType("integer");

                    b.Property<int>("isVerifiedEmail")
                        .HasColumnType("integer");

                    b.Property<int>("isVerifiedPhoneNumber")
                        .HasColumnType("integer");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("phoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("token")
                        .HasColumnType("text");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("userUniqueCode");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("User_Management_System.Models.UserModels.UserVerification", b =>
                {
                    b.Property<string>("identity")
                        .HasColumnType("text");

                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("otp")
                        .HasColumnType("text");

                    b.Property<DateTime?>("otpTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("identity");

                    b.ToTable("UserVerifications");
                });

            modelBuilder.Entity("User_Management_System.Models.SupremeModels.RoleAndAccess", b =>
                {
                    b.HasOne("User_Management_System.Models.SupremeModels.UserRole", "userRole")
                        .WithMany()
                        .HasForeignKey("roleUniqueCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("userRole");
                });

            modelBuilder.Entity("User_Management_System.Models.SupremeModels.UserRoleAssignment", b =>
                {
                    b.HasOne("User_Management_System.Models.SupremeModels.UserRole", "userRole")
                        .WithMany()
                        .HasForeignKey("roleUniqueCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("User_Management_System.Models.UserModels.User", "user")
                        .WithMany("userRoles")
                        .HasForeignKey("userUniqueCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");

                    b.Navigation("userRole");
                });

            modelBuilder.Entity("User_Management_System.Models.UserModels.User", b =>
                {
                    b.Navigation("userRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
